#!/usr/bin/env python
# -*- coding: utf-8 -*-

import telebot
import types
from telebot import types

bot = telebot.TeleBot('5664614354:AAGn8lPRmOXytJkPXaZwAWYdWLmE9V4m8Ok')
PAYMENTS_TOKEN = '381764678:TEST:44295'
# PAYMENTS_TOKEN = '401643678:TEST:337a0c19-863c-4175-a31f-2cc1b1f88196'
# PAYMENTS_TOKEN = '284685063:TEST:ZGJlZjkwNWU1NThj'


# global ITEM
# import pandas as pd
# raise TypeError(f'Object of type {o.__class__.__name__} '
# TypeError: Object of type int64 is not JSON serializable
# df = pd.read_csv("data.txt", sep=';')
# print(df, '\n')
# print(df.info(), '\n')
# df['ID'] = df['ID'].astype(str)
# df['NAME'] = df['NAME'].astype(str)
# df['PHOTO'] = df['PHOTO'].astype(str)
# df['DESCRIPTION'] = df['DESCRIPTION'].astype(str)
# print(df.info(), '\n')
# print(df['NAME'])
# print(df['NAME'][0])
# print(len(df))
# for i in range(len(df)):
#     if df['IS_CLOTHES'][i]:
#         pad = types.InlineKeyboardMarkup().add(types.InlineKeyboardButton(text=df['NAME'][i], callback_data=df['ID'][i]))
#         bot.send_photo(message.from_user.id, open(df['PHOTO'][i], 'rb'), reply_markup=pad)
# for i in range(len(df)):
#     if not df['IS_CLOTHES'][i]:
#         pad = types.InlineKeyboardMarkup().add(types.InlineKeyboardButton(text=df['NAME'][i], callback_data=df['ID'][i]))
#         bot.send_photo(message.from_user.id, open(df['PHOTO'][i], 'rb'), reply_markup=pad)
# mess = f"{df['NAME'][ITEM]}, –∞ –∫–∞–∫–æ–π —Ä–∞–∑–º–µ—Ä?"
# photo_url=f"{df['PHOTO'][ITEM]}",
# title=df['NAME'][ITEM] + str(df['HAS_SIZE'][ITEM]),
# description=df['DESCRIPTION'][ITEM],
# prices=[types.LabeledPrice(label=df['NAME'][ITEM], amount=df['PRICE'][ITEM]*100)],
# for i in range(len(df)):
#     if df['ID'][i] == call.data:
#         ITEM = i
# if call.data == 'hoodie' or call.data == 'shirt':
#     size(call)
# else:
#     buy(call)
# if df['ID'][ITEM] == 'hoodie' or df['ID'][ITEM] == 'shirt':
#     df.loc['HAS_SIZE', ITEM] = message.text

# elif message.text == "M" or message.text == "L" or message.text == "XL":
#     if ITEM.id == 'hoodie' or ITEM.id == 'shirt':
#         ITEM.has_size = message.text
#         buy(message)
#     else:
#         bot.send_message(message.from_user.id, '–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –≤–µ—â—å')
#         menu(message)

#
# def change_availability(message):
#     for good in goods:
#         bot.send_message(527557405, f'{good.name} = {good.availability}')
#     bot.send_message(527557405, '–î–ª—è —Å–º–µ–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –±–æ—Ç–µ –Ω–∞–ª–∏—á–∏—è —Ç–æ–≥–æ –∏–ª–∏ –∏–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å')

# bot.send_message(message.from_user.id,
#                  f"–ü–ª–∞—Ç—ë–∂ –Ω–∞ —Å—É–º–º—É {message.successful_payment.total_amount / 100} {message.successful_payment.currency} –ø—Ä–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ!!!",
#                  parse_mode='Markdown')

# bot.send_message(message.from_user.id, 'üíå', reply_markup=types.ReplyKeyboardRemove())

# global ITEM
# for good in goods:
#     if good.name == call.data:
#         buy(call, good)
        # ITEM = good
# if call.data == 'hoodie' or call.data == 'shirt':
    # size(call)
# else:
#     buy(call, ITEM)

# @bot.message_handler(commands=['deletebot'])
# def stop(message):
#     mess = f'–î–ï–õ–ê–¢–¨ –ß–¢–û–ë–´ –ü–û –≠–¢–û–ô –ö–û–ú–ê–ù–î–ï –ë–û–¢ –£–î–ê–õ–Ø–õ–°–Ø?</b>'
#     bot.send_message(message.from_user.id, mess, parse_mode='html')


# def size(message):
#     keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
#     keyboard.add(types.KeyboardButton("M"),
#                  types.KeyboardButton("L"),
#                  types.KeyboardButton("XL"),
#                  types.KeyboardButton("–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"))
#     mess = f"{ITEM.name}, –∞ –∫–∞–∫–æ–π —Ä–∞–∑–º–µ—Ä?"
#     bot.send_message(message.from_user.id, mess, reply_markup=keyboard)

# –ü—Ä–æ-—Ç–æ –≥–¥–µ –º–æ–∂–Ω–æ –∑–∞–±—Ä–∞—Ç—å –≤–µ—â—å –Ω–∞–¥–æ –Ω–∞–ø–∏—Å–∞—Ç—å –∏–ª–∏ –≤—ã–¥–∞–≤–∞—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –Ω–∞–ø—Ä–∏–º–µ—Ä.
# –∑–∞–±–ª–æ—á–∏—Ç—å –ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å –±–ª–æ–∫ Buy
# –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å —á—Ç–æ–±—ã –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–Ω–æ–ø–∫–∏ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–ª–∏ —Ç–æ–ª—å–∫–æ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –º–µ—Å—Ç–µ , reply_to_message_id=message.from_user.id)
# bot.polling(none_stop=True)   # —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ , interval=0, skip_pending=False|True, allowed_updates=[]
# –ü—Ä–æ—Å—Ç–æ –Ω–∞–¥–æ –Ω–µ bot.infinity_polling(), –∞ –≤–µ–±—Ö—É–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å
# while True:
#     pass
# –º–æ–∂–µ—Ç –≤—ã–¥–∞–≤–∞—Ç—å –≤–µ—Å—å –∞—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç —Å—Ä–∞–∑—É, —Ç–∞–º –Ω–µ —Ç–∞–∫—É —É–∂ –º–Ω–æ–≥–æ
# –ù–£–ñ–ù–ê –§–û–¢–ö–ê 640—Ö360 –∏–ª–∏ GIF 320—Ö180 –≤—Ä–æ–¥–µ, –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –ª–æ–≥–∏–Ω –±–æ—Ç–∞
# –Ω—É–∂–Ω—ã –Ω–æ—Ä–º–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–∫–∏, –∫–æ–ª–∏—á–µ—Ç—Å–≤–æ –≤–µ—â–µ–π –∫–∞–∂–¥–æ–≥–æ (—Ç–∏–ø–∞/–≤–∏–¥–∞/—Ä–∞–∑–º–µ—Ä–∞), —Å—Ç–æ–∏–º–æ—Å—Ç—å
# —Ö–∑ –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å —á—Ç–æ–±—ã —Ç–µ —Ä–∞–∑–º–µ—Ä—ã (–∏ –º–æ–¥–µ–ª–∏) –∫–æ—Ç–æ—Ä—ã—Ö —É–∂–µ –Ω–µ—Ç - –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–ª–∏—Å—å –≤ –∫–Ω–æ–ø–∫–∞—Ö
# —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ–º –∏ –Ω—É–∂–Ω–∞ –ª–∏ –∫–æ–º–∞–Ω–¥–∞ start –≤ –º–µ–Ω—é –∏ help –æ—Ç–¥–µ–ª—å–Ω—ã–º
# —Å–¥–µ–ª–∞—Ç—å —á—Ç–æ–±—ã –∫–ª–∞–≤–∞ —Å–∫—Ä—ã–≤–∞–ª–∞—Å—å –∏ –±—ã–ª —Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–∫—É–ø–∫—É
# –º–± —Å—Ç–æ–∏—Ç –ø–æ–º–µ–Ω—è—Ç—å —Ç–µ–∫—Å—Ç –ü–õ–∞—Ç—ë–∂ –Ω–∞ —Å—É–º–º—É 300 —Ä—É–±–ª–µ–π –ø—Ä–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ, –∏–ª–∏ –≤–æ–æ–±—â–µ —É–±—Ä–∞—Ç—å –Ω–∞–¥–ø–∏—Å—å –∏ –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ —Å—Ç–∏–∫–µ—Ä
# 1111 1111 1111 1026 12/22 000
# 2200 0000 0000 0053 12/14 123


class Good:
    def __init__(self, id, name, photo, description, price, is_clothes, availability=True, availability_text='–µ—Å—Ç—å'):
        self.id = id
        self.name = name
        self.photo = photo
        self.description = description
        self.price = price
        self.is_clothes = is_clothes
        self.availability = availability
        self.availability_text = availability_text


goods = [Good('hoodie', '–•—É–¥–∏ oversize', 'https://downloader.disk.yandex.ru/preview/e8ffd5e66f6e48e6b68d87e3a1424ace5c0813e4c6f813c36d90b5ab97c79835/637e228f/rfxXmPbxn4XpIWyLBCMqqYQEwxCg4I2e0_B2dpixROBfKhpOOVBEII0AcpGlJrApNxYxKX7HHKs5VErryCFbyw%3D%3D?uid=0&filename=%D0%A5%D1%83%D0%B4%D0%B8.png&disposition=inline&hash=&limit=0&content_type=image%2Fjpeg&owner_uid=0&tknv=v2&size=2048x2048', '–û–ø–∏—Å–∞–Ω–∏–µ —Ö—É–¥–∞–∫–∞', 300, True),
         Good('shirt', '–§—É—Ç–±–æ–ª–∫–∞ oversize', 'https://downloader.disk.yandex.ru/preview/7e63314552b363b88a7dbe49d49167b03d27d88ea517116fcda8275ca1e59a48/637e2275/zaG-o_OWA_lKVdmEbCXrN35OkJChHTg5HmV7a3Dy_UwDK780O1zkNTuo9B8S7mADP9pvFY_yTXMmPsC90zMOGA%3D%3D?uid=0&filename=%D0%A4%D1%83%D1%82%D0%B1%D0%BE%D0%BB%D0%BA%D0%B0.png&disposition=inline&hash=&limit=0&content_type=image%2Fjpeg&owner_uid=0&tknv=v2&size=2048x2048', '–û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É—Ç–±–æ–ª–∫–∏', 200, True),
         Good('shirt', '–§—É—Ç–±–æ–ª–∫–∞ oversize long', 'https://downloader.disk.yandex.ru/preview/7e63314552b363b88a7dbe49d49167b03d27d88ea517116fcda8275ca1e59a48/637e2275/zaG-o_OWA_lKVdmEbCXrN35OkJChHTg5HmV7a3Dy_UwDK780O1zkNTuo9B8S7mADP9pvFY_yTXMmPsC90zMOGA%3D%3D?uid=0&filename=%D0%A4%D1%83%D1%82%D0%B1%D0%BE%D0%BB%D0%BA%D0%B0.png&disposition=inline&hash=&limit=0&content_type=image%2Fjpeg&owner_uid=0&tknv=v2&size=2048x2048', '–û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É—Ç–±–æ–ª–∫–∏', 200, True),
         Good('sock', '–ù–æ—Å–∫–∏ one size', 'https://downloader.disk.yandex.ru/preview/1983eb668beafad9126bbd7912503f465eac88cbc36b5ee19401e5fb7cc10cbd/637e21f9/vR0yglLIvLHWmU9BOSZcCNOiNFoh7dGQoW_rj8KjDfd8ftRf8h2eumm-KrOAWZY8AOjIF1IZCyXritQtcVO3dQ%3D%3D?uid=0&filename=%D0%9D%D0%BE%D1%81%D0%BA%D0%B8.png&disposition=inline&hash=&limit=0&content_type=image%2Fjpeg&owner_uid=0&tknv=v2&size=2048x2048', '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–æ—Å–∫–æ–≤', 500, True),
         Good('hat', '–®–∞–ø–∫–∞', 'https://downloader.disk.yandex.ru/preview/f92f71efeff9ed905b72808040add379e2c94aed58ff535cc569a069e63b1ec3/637e2131/CBSeuMWTOpTyAoiiJcIKtGZDamRRtza3VurjjY4Uzv_uapKUTQgFiRBiu77rzc0gJE5q2KnDGGmwewLnQAs1Rg%3D%3D?uid=0&filename=hat.png&disposition=inline&hash=&limit=0&content_type=image%2Fjpeg&owner_uid=0&tknv=v2&size=2048x2048', '–û–ø–∏—Å–∞–Ω–∏–µ —à–∞–ø–∫–∏', 800, True),
         Good('notebook', '–ë–ª–æ–∫–Ω–æ—Ç', 'https://downloader.disk.yandex.ru/preview/565269cac7e19e9a350189f0324879d4122da050ffe1cfde65cc3ccc13ad7ff2/637e2192/SW7a7zwm6hg0dqYp80uuOD2rt87r17JLMLTG5rRd9CWqSgbQNud5w2HgECYZSLCTfVR7bjZBh8uSSQ3ktoP2eA%3D%3D?uid=0&filename=%D0%91%D0%BB%D0%BE%D0%BA%D0%BD%D0%BE%D1%82.png&disposition=inline&hash=&limit=0&content_type=image%2Fjpeg&owner_uid=0&tknv=v2&size=2048x2048', '–û–ø–∏—Å–∞–Ω–∏–µ –±–ª–æ–∫–Ω–æ—Ç–∞', 300, False),
         Good('doping1', '–¢–∞–±–ª–µ—Ç–Ω–∏—Ü–∞ 1', 'https://downloader.disk.yandex.ru/preview/01e03ed032957cdc504edd507fdbaa933cbb007eacfff8fa1d95f7e9faace11d/637e21aa/MN2Bk29cAHuWL9RicuyW435OkJChHTg5HmV7a3Dy_UzR055kEF4j7TxbCU6SBGEp5Bmi3GbDKZ7c2Em8lEbasw%3D%3D?uid=0&filename=%D0%94%D0%BE%D0%BF%D0%B8%D0%BD%D0%B31.png&disposition=inline&hash=&limit=0&content_type=image%2Fjpeg&owner_uid=0&tknv=v2&size=2048x2048', '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–∞–±–ª–µ—Ç–Ω–∏—Ü—ã 1', 200, False),
         Good('doping2', '–¢–∞–±–ª–µ—Ç–Ω–∏—Ü–∞ 2', 'https://downloader.disk.yandex.ru/preview/4b887b7e9d6afdc67ef1314838f81075c409c226fc1bfd1276b63a3ee719c517/637e21be/QHxQE270CVgBXe0vbECRvdOiNFoh7dGQoW_rj8KjDfdNaQ7S6xu74MvQyzGOreZ1_gsj1g06JklHV9N9ggCoRg%3D%3D?uid=0&filename=%D0%94%D0%BE%D0%BF%D0%B8%D0%BD%D0%B32.png&disposition=inline&hash=&limit=0&content_type=image%2Fjpeg&owner_uid=0&tknv=v2&size=2048x2048', '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–∞–±–ª–µ—Ç–Ω–∏—Ü—ã 2', 200, False),
         Good('cup', '–ö—Ä—É–∂–∫–∞', 'https://downloader.disk.yandex.ru/preview/5759990749c9dfaf3adfa8c2426e056ee5d8770cbbfb6f2ae0528fb41ae20ae3/637e21d7/54udLxnJw_YfCcz1RLIhYn5OkJChHTg5HmV7a3Dy_UzsTzCQUyHhkrkg9aNXi0EbyDHMNQJihh5i_PCo1YbnkQ%3D%3D?uid=0&filename=%D0%9A%D1%80%D1%83%D0%B6%D0%BA%D0%B0.png&disposition=inline&hash=&limit=0&content_type=image%2Fpng&owner_uid=0&tknv=v2&size=2048x2048', '–û–ø–∏—Å–∞–Ω–∏–µ –∫—Ä—É–∂–∫–∏', 400, False),
         Good('therm_mug', '–¢–µ—Ä–º–æ–∫—Ä—É–∂–∫–∞', 'https://downloader.disk.yandex.ru/preview/48521d21551cd76981de819c835d92a46feb3b18caf63720d216635c7d99374d/637e2235/cl8slIqwhSnrUtW9m_aDY9OiNFoh7dGQoW_rj8KjDfdV00_bUnI_sOu8xzFxBd7TEhpojkn3BjlsRhQNrLfHfw%3D%3D?uid=0&filename=%D0%A2%D0%B5%D1%80%D0%BC%D0%BE%D0%BA%D1%80%D1%83%D0%B6%D0%BA%D0%B0.png&disposition=inline&hash=&limit=0&content_type=image%2Fpng&owner_uid=0&tknv=v2&size=2048x2048', '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Ä–º–æ–∫—Ä—É–∂–∫–∏', 450, False),
         Good('plaid', '–ü–ª–µ–¥', 'https://downloader.disk.yandex.ru/preview/f37921d4b99cd2df6bdb09855fb702da553fead34774281d394d0b2592419937/637e220b/hRwzepJKQBDDh_qjer2VTtPL9EKIhaHyIz0Lq1cpNRTO1SXzOBFZ8RIcpNCty1aT1cpIKPLO2ATd4ieCKITFBw%3D%3D?uid=0&filename=%D0%9F%D0%BB%D0%B5%D0%B4.png&disposition=inline&hash=&limit=0&content_type=image%2Fjpeg&owner_uid=0&tknv=v2&size=2048x2048', '–û–ø–∏—Å–∞–Ω–∏–µ –ø–ª–µ–¥–∞', 500, False),
         Good('stickers', '–°—Ç–∏–∫–µ—Ä—ã', 'https://downloader.disk.yandex.ru/preview/59443195dd28e81fb0015e5c5e88376be86eebb99b9894960d6579695ba11a78/637e221b/yJH_ATwgWZXudrsWliezcZ58w0pTF3LtEav6JWhRlHVMycwHnmEmZzGFg4a_yVbDlx-NTeGrOBJ4-9ik10EXzg%3D%3D?uid=0&filename=%D0%A1%D1%82%D0%B8%D0%BA%D0%B5%D1%80%D1%8B.png&disposition=inline&hash=&limit=0&content_type=image%2Fjpeg&owner_uid=0&tknv=v2&size=2048x2048', '–û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∏–∫–µ—Ä–æ–≤', 100, False),
         Good('ball', '–ù–æ–≤–æ–≥–æ–¥–Ω–∏–π —à–∞—Ä', 'https://downloader.disk.yandex.ru/preview/f6448ab4e5cbd04aeb1315b8d6ca15601baed2000487af770f7ed3ba52e89546/637e22a2/pA5zBOz1fuxOwT6yucvbqdOiNFoh7dGQoW_rj8KjDfezLvaGv6EJjIUzYBPGn6__EegygdvD8bSkwtX8VvvQlw%3D%3D?uid=0&filename=%D0%A8%D0%B0%D1%80.png&disposition=inline&hash=&limit=0&content_type=image%2Fjpeg&owner_uid=0&tknv=v2&size=2048x2048', '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–≥–æ —à–∞—Ä–∞',    250,    False),
         Good('shopper1', '–®–æ–ø–µ—Ä 1', 'https://downloader.disk.yandex.ru/preview/c7f9695f25f3831b9de6c73ec6071e377cfcdc1e38606ea997c678f0f0160945/637e22ba/b5oOeI0p5ds9Cv3xjkuKYp58w0pTF3LtEav6JWhRlHVMYSty31aWaTppZhPEB3STtwSMjKeQFGuUBId3Z0tJkQ%3D%3D?uid=0&filename=%D0%A8%D0%BE%D0%BF%D0%B5%D1%801.png&disposition=inline&hash=&limit=0&content_type=image%2Fjpeg&owner_uid=0&tknv=v2&size=2048x2048', '–û–ø–∏—Å–∞–Ω–∏–µ —à–æ–ø–µ—Ä–∞ 1', 999, False),
         Good('shopper2', '–®–æ–ø–µ—Ä 2', 'https://downloader.disk.yandex.ru/preview/0f73f7bc69d1f246eac745ce000bfeac5e1d102f26554c0472e84da573a7abf2/637e22cd/nVLtOjqqkW8XXdDZT7YWvtOiNFoh7dGQoW_rj8KjDfe2EedX-ayFSav7CyHg731OUMU5TtTL5als8KuKezOaRw%3D%3D?uid=0&filename=%D0%A8%D0%BE%D0%BF%D0%B5%D1%802.png&disposition=inline&hash=&limit=0&content_type=image%2Fjpeg&owner_uid=0&tknv=v2&size=2048x2048', '–û–ø–∏—Å–∞–Ω–∏–µ —à–æ–ø–µ—Ä–∞ 2', 500, False)]


@bot.message_handler(commands=['start'])
def start(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    keyboard.add(types.KeyboardButton("–ë–æ–∂–µ, —Ö—Ä–∞–Ω–∏ –í–¢–§–ú!\u2764\uFE0F‚ù§‚ù§!"))
    mess = '–î–æ—Ä–æ–≥–∏–µ –¥—Ä—É–∑—å—è! –ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å–≤–æ–≤–∞—Ç—å –í–∞—Å –Ω–∞ –í–¢–§–ú 2022!'
    bot.send_message(message.from_user.id, mess, reply_markup=keyboard)


def start2(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    keyboard.add(types.KeyboardButton("–ü—Ä–∏–≤–µ—Ç –ë–û–¢!"))
    mess = '–ú—ã —Å—Ç—Ä–µ–º–∏–º—Å—è –∏–¥—Ç–∏ –≤ –Ω–æ–≥—É —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º –∏ —Å–¥–µ–ª–∞–ª–∏ –¥–ª—è –≤–∞—Å –°—É–ø–µ—Ä –±–æ—Ç–∞ –¥–ª—è –º–µ—Ä—á–∞!'
    bot.send_message(message.from_user.id, mess, reply_markup=keyboard)


def start3(message):
    bot.send_message(message.from_user.id, '–õ–µ–≥–∫–∏–π FAQ!\n\n'
                                           '–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?\n\n'
                                           '- –í—ã–±–∏—Ä–∞–π –º–µ—Ä—á –¥–ª—è —Å–µ–±—è –∏ –¥—Ä—É–∑–µ–π\n\n'
                                           '- –û–ø–ª–∞—á–∏–≤–∞–π –ø—Ä—è–º–æ –∑–¥–µ—Å—å\n\n'
                                           '- –í–æ–ª–æ–Ω—Ç–µ—Ä –ø—Ä–∏–Ω–µ—Å–µ—Ç –∏ —Ç–æ—Ä–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ –≤—Ä—É—á–∏—Ç –ø–æ–∫—É–ø–∫—É!\n\n'
                                           '- –¢–æ–ª—å–∫–æ —Å–∞–º–æ–≤—ã–≤–æ–∑ –∏ —Ç–æ–ª—å–∫–æ –≤–æ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –í–¢–§–ú 8-12 –¥–µ–∫–∞–±—Ä—èüòé', reply_markup=types.ReplyKeyboardRemove())
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    keyboard.add(types.KeyboardButton("–î–ê!"), types.KeyboardButton("–ù–ï–¢!"))
    mess = '–ü–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è —Å –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–æ–º –í–¢–§–ú 2022?'
    bot.send_message(message.from_user.id, mess, reply_markup=keyboard)


@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.from_user.id, "–Ø —É–º–µ—é –æ–±—â–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ —Å –ø–æ–º–æ—â—å—é –º–µ–Ω—é –∏ –∫–Ω–æ–ø–æ–∫")


@bot.message_handler(commands=['shop'])
def menu(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    keyboard.add(types.KeyboardButton("–û–¥–µ–∂–¥–∞"), types.KeyboardButton("–°—É–≤–µ–Ω–∏—Ä–∫–∞ –í–§–¢–ú"))
    mess = "–û–¥–µ–∂–¥–∞ –∏–ª–∏ —Å—É–≤–µ–Ω–∏—Ä—ã?"
    bot.send_message(message.from_user.id, mess, reply_markup=keyboard)


def myFunc(e):
    return e.availability


def clothes(message):
    i = 0
    goods.sort(key=myFunc)
    pad = types.InlineKeyboardMarkup()
    for good in goods:
        if good.is_clothes and good.availability:
            pad = pad.add(types.InlineKeyboardButton(text=good.name, callback_data=good.name))
            if i == range(len(goods)) or goods[i+1].id != good.id:
                bot.send_photo(message.from_user.id, good.photo, reply_markup=pad)
                pad = types.InlineKeyboardMarkup()
        i += 1


def accessories(message):
    for good in goods:
        if not good.is_clothes and good.availability:
            pad = types.InlineKeyboardMarkup().add(types.InlineKeyboardButton(text=good.name, callback_data=good.name))
            bot.send_photo(message.from_user.id, good.photo, reply_markup=pad)


def search_good(name):
    for good in goods:
        if good.name == name:
            return good


def buy(message, good):
    bot.send_invoice(message.from_user.id,
                     title=good.name,
                     description=good.description,
                     photo_url=good.photo,
                     provider_token=PAYMENTS_TOKEN,
                     currency="rub",
                     prices=[types.LabeledPrice(label=good.name, amount=good.price*100)],
                     need_name=True,
                     need_phone_number=True,
                     invoice_payload=good.name)


@bot.pre_checkout_query_handler(lambda query: True)
def checkout(checkout_q):
    mess = "–ò–∑–≤–∏–Ω–∏—Ç–µ, –∫—Ç–æ-—Ç–æ —Ç–æ–ª—å–∫–æ —á—Ç–æ –∫—É–ø–∏–ª –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç–∞–∫–æ–π —Ç–æ–≤–∞—Ä, –ø–æ–∫–∞ –≤—ã –∑–∞–ø–æ–ª–Ω—è–ª–∏ –ø–ª–∞—Ç–µ–∂–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã."
    bot.answer_pre_checkout_query(checkout_q.id, ok=search_good(checkout_q.invoice_payload).availability, error_message=mess)


@bot.message_handler(content_types=['successful_payment'])
def successful_payment(message):
    bot.send_sticker(chat_id=message.from_user.id, sticker='CAACAgIAAxkBAAEGFbVje2QQ_w5QhFFMUowHORFG4vI-pQAC1B0AAqdekUu4h9vEFWLtyisE')
    bot.send_message('-882047975', f'\t–ò–º—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º:\n<b>{message.from_user.first_name, message.from_user.last_name, message.from_user.username}</b>\n'
                                   f'\t–ò–º—è –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ:<b><font color=green>\n{message.successful_payment.order_info.name}</font></b>\n'
                                   f'\t–û–ø–ª–∞—Ç–∏–ª:\n<b>{message.successful_payment.invoice_payload}</b>\n'
                                   f'\t–°—Ç–æ–∏–º–æ—Å—Ç—å—é:\n<b>{message.successful_payment.total_amount/100} RUB</b>\n'
                                   f'\t–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:\n<b>{message.successful_payment.order_info.phone_number}</b>', reply_markup=types.ReplyKeyboardRemove(), parse_mode='html')


@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
    buy(call, search_good(call.data))


@bot.message_handler(chat_types=['group'])
def get_text_messages(message):
    if message.chat.id == -882047975 and message.text == '/–Ω–∞–ª–∏—á–∏–µ —Ç–æ–≤–∞—Ä–æ–≤':
        bot.send_message('-882047975', "–ß–µ—Ä–µ–∑ —ç—Ç–æ –º–µ–Ω—é –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –º–µ–Ω—è—Ç—å –Ω–∞–ª–∏—á–∏–µ –ª—é–±–æ–≥–æ —Ç–æ–≤–∞—Ä–∞.", reply_markup=types.ReplyKeyboardRemove())
        for good in goods:
            bot.send_message('-882047975', f'{good.name} = {good.availability_text}')
        bot.send_message('-882047975', '–î–ª—è —Å–º–µ–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –±–æ—Ç–µ –Ω–∞–ª–∏—á–∏—è —Ç–æ–≥–æ –∏–ª–∏ –∏–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω—É–∂–Ω–æ:\n'
                                       '–ü–µ—Ä–µ—Å–ª–∞—Ç—å –æ–¥–∏–Ω –∏–∑ —Ç–æ–≤–∞—Ä–æ–≤ –≤—ã—à–µ –≤ —ç—Ç–æ—Ç –∂–µ —á–∞—Ç —Å –Ω–∞–¥–ø–∏—Å—å—é "+" –∏–ª–∏ "-".\n'
                                       '\t"+" –µ—Å—Ç—å –≤ –Ω–∞–ª–∏—á–∏–∏\n'
                                       '\t"-" –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏.')
    elif message.chat.id == -882047975 and (message.text == '-' or message.text == '+') and message.reply_to_message:
        for good in goods:
            if message.reply_to_message.text == f'{good.name} = {good.availability_text}' and good.availability:
                good.availability = False
                good.availability_text = '–Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏'
                bot.send_message('-882047975', f'{good.name} = {good.availability_text}', reply_to_message_id=message.id)
            elif message.reply_to_message.text == f'{good.name} = {good.availability_text}' and not good.availability:
                good.availability = True
                good.availability_text = '–µ—Å—Ç—å'
                bot.send_message('-882047975', f'{good.name} = {good.availability_text}', reply_to_message_id=message.id)
    else:
        bot.send_message(message.chat.id, "–Ø –≤–∞–º —Ç—É—Ç –Ω–µ –º–µ—à–∞—é?", reply_markup=types.ReplyKeyboardRemove())


@bot.message_handler(content_types=['text', 'voice', 'photo', 'video', 'audio', 'document', 'sticker'])
def get_text_messages(message):
    # if message.chat.id == -882047975 and message.text == '/–Ω–∞–ª–∏—á–∏–µ —Ç–æ–≤–∞—Ä–æ–≤':
    #     bot.send_message('-882047975', "–ß–µ—Ä–µ–∑ —ç—Ç–æ –º–µ–Ω—é –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –º–µ–Ω—è—Ç—å –Ω–∞–ª–∏—á–∏–µ –ª—é–±–æ–≥–æ —Ç–æ–≤–∞—Ä–∞.", reply_markup=types.ReplyKeyboardRemove())
    #     for good in goods:
    #         bot.send_message('-882047975', f'{good.name} = {good.availability_text}')
    #     bot.send_message('-882047975', '–î–ª—è —Å–º–µ–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –±–æ—Ç–µ –Ω–∞–ª–∏—á–∏—è —Ç–æ–≥–æ –∏–ª–∏ –∏–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω—É–∂–Ω–æ:\n'
    #                                    '–ü–µ—Ä–µ—Å–ª–∞—Ç—å –æ–¥–∏–Ω –∏–∑ —Ç–æ–≤–∞—Ä–æ–≤ –≤—ã—à–µ –≤ —ç—Ç–æ—Ç –∂–µ —á–∞—Ç —Å –Ω–∞–¥–ø–∏—Å—å—é "+" –∏–ª–∏ "-".\n'
    #                                    '\t"+" –µ—Å—Ç—å –≤ –Ω–∞–ª–∏—á–∏–∏\n'
    #                                    '\t"-" –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏.')
    # elif message.chat.id == -882047975 and (message.text == '-' or message.text == '+') and message.reply_to_message:
    #     for good in goods:
    #         if message.reply_to_message.text == f'{good.name} = {good.availability_text}' and good.availability:
    #             good.availability = False
    #             good.availability_text = '–Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏'
    #             bot.send_message('-882047975', f'{good.name} = {good.availability_text}', reply_to_message_id=message.id)
    #         elif message.reply_to_message.text == f'{good.name} = {good.availability_text}' and not good.availability:
    #             good.availability = True
    #             good.availability_text = '–µ—Å—Ç—å'
    #             bot.send_message('-882047975', f'{good.name} = {good.availability_text}', reply_to_message_id=message.id)
    if message.voice:
        bot.send_message(message.from_user.id, '–Ø –≤ –º–µ—Ç—Ä–æ, –Ω–∞—É—à–Ω–∏–∫–æ–≤ –Ω–µ—Ç...')
    elif message.photo:
        bot.send_message(message.from_user.id, '–ö–ª–∞—Å—Å–Ω–∞—è —Ñ–æ—Ç–∫–∞!')
    elif message.video:
        bot.send_message(message.from_user.id, '–í–∏–¥–µ–æ –∫–∞–∫ –≤–∏–¥–µ–æ, –º–Ω–µ –±–æ–ª—å—à–µ –¥—Ä—É–≥–æ–≥–æ —Ç–∏–ø–∞ –Ω—Ä–∞–≤—è—Ç—Å—è')
    elif message.audio:
        bot.send_message(message.from_user.id, '–ü–æ—Ç–æ–º –ø–æ—Å–ª—É—à–∞—é')
    elif message.document:
        bot.send_message(message.from_user.id, '–ù—É –∏ —á—Ç–æ –≤ –Ω–µ–º? –°—Ü–µ–Ω–∞—Ä–∏–π –∫ 2023?')
    elif message.sticker:
        bot.send_message(message.from_user.id, '–Ø —Ç–æ–∂–µ –º–æ–≥ –±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–±–µ —Å—Ç–∏–∫–µ—Ä, –ù–û –Ω–µ –±—É–¥—É')
    elif message.text == "–ë–æ–∂–µ, —Ö—Ä–∞–Ω–∏ –í–¢–§–ú!\u2764\uFE0F‚ù§‚ù§!":
        start2(message)
    elif message.text == "–ü—Ä–∏–≤–µ—Ç –ë–û–¢!":
        start3(message)
    elif message.text == "–î–ê!" or message.text == "–ù—É –¥–∞–≤–∞–π—Ç–µ!":
        menu(message)
    elif message.text == "–û–¥–µ–∂–¥–∞":
        clothes(message)
    elif message.text == "–°—É–≤–µ–Ω–∏—Ä–∫–∞ –í–§–¢–ú":
        accessories(message)
    elif message.text == "–ù–ï–¢!":
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        keyboard.add(types.KeyboardButton("–ù—É –¥–∞–≤–∞–π—Ç–µ!"), types.KeyboardButton("–ù–ï–¢!"))
        mess = '–ö–æ–ª–ª–µ–≥–∞, —ç—Ç–æ—Ç –±–æ—Ç —É–º–µ–µ—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–æ–¥–∞–≤–∞—Ç—å... –ü–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è —Å –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–æ–º –í–¢–§–ú 2022?'
        bot.send_message(message.from_user.id, mess, reply_markup=keyboard)
    else:
        bot.send_message(message.from_user.id, "–≠—Ç–æ —á—Ç–æ-—Ç–æ –Ω–∞ –∏–≤—Ä–∏—Ç–µ? –Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é. –ù–∞–ø–∏—à–∏ /help.")


bot.infinity_polling()


def print_hi(name):
    print(f'–ë–û–¢ {name}')


if __name__ == '__main__':
    print_hi('–ü–†–ï–ö–†–ê–¢–ò–õ –†–ê–ë–û–¢–£!')
    bot.send_message('-882047975', "–ë–û–¢ –ü–†–ï–ö–†–ê–¢–ò–õ –†–ê–ë–û–¢–£!!!")
