#!/usr/bin/env python
# -*- coding: utf-8 -*-

import telebot
import types
from telebot import types

bot = telebot.TeleBot('5810807628:AAFbLp5CQpn-YANuVytQbUqPBplKW8semqw')
PAYMENTS_TOKEN = '381764678:TEST:46304'
GROUP_CHAT_ID = -1001485436799


class Good:
    def __init__(self, id, name, photo, description, price, is_clothes, availability=True, availability_text='–µ—Å—Ç—å'):
        self.id = id
        self.name = name
        self.photo = photo
        self.description = description
        self.price = price
        self.is_clothes = is_clothes
        self.availability = availability
        self.availability_text = availability_text


goods = [Good('hoodie', '–•—É–¥–∏ oversize', 'https://downloader.disk.yandex.ru/preview/e8ffd5e66f6e48e6b68d87e3a1424ace5c0813e4c6f813c36d90b5ab97c79835/637e228f/rfxXmPbxn4XpIWyLBCMqqYQEwxCg4I2e0_B2dpixROBfKhpOOVBEII0AcpGlJrApNxYxKX7HHKs5VErryCFbyw%3D%3D?uid=0&filename=%D0%A5%D1%83%D0%B4%D0%B8.png&disposition=inline&hash=&limit=0&content_type=image%2Fjpeg&owner_uid=0&tknv=v2&size=2048x2048', '–•—É–¥–∏ —á–µ—Ä–Ω—ã–π –æ–≤–µ—Ä—Å–∞–π–∑ ‚Äú–ú—ã —Å–ø—Ä–∞–≤–∏–º—Å—è‚Äù', 4500, True),
         Good('shirt', '–§—É—Ç–±–æ–ª–∫–∞ oversize', 'https://downloader.disk.yandex.ru/preview/7e63314552b363b88a7dbe49d49167b03d27d88ea517116fcda8275ca1e59a48/637e2275/zaG-o_OWA_lKVdmEbCXrN35OkJChHTg5HmV7a3Dy_UwDK780O1zkNTuo9B8S7mADP9pvFY_yTXMmPsC90zMOGA%3D%3D?uid=0&filename=%D0%A4%D1%83%D1%82%D0%B1%D0%BE%D0%BB%D0%BA%D0%B0.png&disposition=inline&hash=&limit=0&content_type=image%2Fjpeg&owner_uid=0&tknv=v2&size=2048x2048', '–§—É—Ç–±–æ–ª–∫–∞ —á–µ—Ä–Ω–∞—è –æ–≤–µ—Ä—Å–∞–π–∑ ‚Äú–ü—Ä–æ–¥—é—Å–µ—Ä‚Äù', 2500, True),
         Good('shirt', '–§—É—Ç–±–æ–ª–∫–∞ oversize long', 'https://downloader.disk.yandex.ru/preview/7e63314552b363b88a7dbe49d49167b03d27d88ea517116fcda8275ca1e59a48/637e2275/zaG-o_OWA_lKVdmEbCXrN35OkJChHTg5HmV7a3Dy_UwDK780O1zkNTuo9B8S7mADP9pvFY_yTXMmPsC90zMOGA%3D%3D?uid=0&filename=%D0%A4%D1%83%D1%82%D0%B1%D0%BE%D0%BB%D0%BA%D0%B0.png&disposition=inline&hash=&limit=0&content_type=image%2Fjpeg&owner_uid=0&tknv=v2&size=2048x2048', '–§—É—Ç–±–æ–ª–∫–∞ —á–µ—Ä–Ω–∞—è –æ–≤–µ—Ä—Å–∞–π–∑ - –ª–æ–Ω–≥ ‚Äú–ü—Ä–æ–¥—é—Å–µ—Ä‚Äù', 2500, True),
         Good('sock', '–ù–æ—Å–∫–∏ one size', 'https://downloader.disk.yandex.ru/preview/72bef04504007d0b16250428569d783638b9a594531eab47b5568a249b62c3fd/63891a18/vR0yglLIvLHWmU9BOSZcCNOiNFoh7dGQoW_rj8KjDfd8ftRf8h2eumm-KrOAWZY8AOjIF1IZCyXritQtcVO3dQ%3D%3D?uid=0&filename=%D0%9D%D0%BE%D1%81%D0%BA%D0%B8.png&disposition=inline&hash=&limit=0&content_type=image%2Fjpeg&owner_uid=0&tknv=v2&size=2048x2048', '–ù–æ—Å–∫–∏ —á–µ—Ä–Ω—ã–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ —Å –Ω–∞–¥–ø–∏—Å—å—é ‚Äú–¢—Ä–µ–Ω–∏—Ä—É–π –¥—É—à—É - —Ö–æ–¥–∏ –≤ —Ç–µ–∞—Ç—Ä‚Äù', 550, True),
         Good('hat', '–®–∞–ø–∫–∞', 'https://downloader.disk.yandex.ru/preview/2d7b11d124471f10693a8341ade1edf4ef64c8ac3dfa20bebef9880d1dca8aad/63891a43/CBSeuMWTOpTyAoiiJcIKtGZDamRRtza3VurjjY4Uzv_uapKUTQgFiRBiu77rzc0gJE5q2KnDGGmwewLnQAs1Rg%3D%3D?uid=0&filename=hat.png&disposition=inline&hash=&limit=0&content_type=image%2Fjpeg&owner_uid=0&tknv=v2&size=2048x2048', '–®–∞–ø–∫–∞ —á–µ—Ä–Ω–∞—è —Å –≤—ã—à–∏–≤–∫–æ–π ‚Äú–ü—Ä–æ–¥—é—Å–µ—Ä‚Äù', 1500, True),
         Good('doping', '–¢–∞–±–ª–µ—Ç–Ω–∏—Ü–∞', 'https://downloader.disk.yandex.ru/preview/bea5c5d2a0a349c741cd23b55f4a4e74d82ff69170ce75e4439d6d15b744acf6/63891b21/QHxQE270CVgBXe0vbECRvdOiNFoh7dGQoW_rj8KjDfdNaQ7S6xu74MvQyzGOreZ1_gsj1g06JklHV9N9ggCoRg%3D%3D?uid=0&filename=%D0%94%D0%BE%D0%BF%D0%B8%D0%BD%D0%B32.png&disposition=inline&hash=&limit=0&content_type=image%2Fjpeg&owner_uid=0&tknv=v2&size=2048x2048', '–î—Ä–∞–∂–µ –∞—Å–∫–æ—Ä–±–∏–Ω–æ–≤–æ–π –∫–∏—Å–ª–æ—Ç—ã –≤ –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–æ–π –∫–æ—Ä–æ–±–∫–µ ‚Äú–î–ª—è —Ç–µ—Ö, –∫—Ç–æ —É–∂–µ –Ω–µ –≤—ã–≤–æ–∑–∏—Ç‚Äù', 350, False),
         Good('therm_mug', '–¢–µ—Ä–º–æ–∫—Ä—É–∂–∫–∞', 'https://downloader.disk.yandex.ru/preview/2cfc80d2eb778bb3d5c6718e780594d9ca8276b49b976a0167a1ea560a29c5e4/63891b45/cl8slIqwhSnrUtW9m_aDY9OiNFoh7dGQoW_rj8KjDfdV00_bUnI_sOu8xzFxBd7TEhpojkn3BjlsRhQNrLfHfw%3D%3D?uid=0&filename=%D0%A2%D0%B5%D1%80%D0%BC%D0%BE%D0%BA%D1%80%D1%83%D0%B6%D0%BA%D0%B0.png&disposition=inline&hash=&limit=0&content_type=image%2Fpng&owner_uid=0&tknv=v2&size=2048x2048', '–¢–µ—Ä–º–æ—Å—Ç–∞–∫–∞–Ω —Å–æ—Ñ—Ç-—Ç–∞—á —Å –≥—Ä–∞–≤–∏—Ä–æ–≤–∫–æ–π ‚Äú–£ –º–µ–Ω—è –∞–Ω—Ç—Ä–∞–∫—Ç‚Äù', 1550, False),
         Good('plaid', '–ü–ª–µ–¥', 'https://downloader.disk.yandex.ru/preview/5e5298df389adb191541e0562857f98ac1c9daf42840fa08f160fe4bcdd66d76/63891b60/hRwzepJKQBDDh_qjer2VTtPL9EKIhaHyIz0Lq1cpNRTO1SXzOBFZ8RIcpNCty1aT1cpIKPLO2ATd4ieCKITFBw%3D%3D?uid=0&filename=%D0%9F%D0%BB%D0%B5%D0%B4.png&disposition=inline&hash=&limit=0&content_type=image%2Fjpeg&owner_uid=0&tknv=v2&size=2048x2048', '–ü–ª–µ–¥ —Ñ–ª–∏—Å–æ–≤—ã–π —Å –≤—ã—à–∏–≤–∫–æ–π –Ω–∞ –±–∏—Ä–∫–µ ‚Äú–¢–µ–ø–ª—ã–π –ø—Ä–∏–µ–º‚Äù', 1500, False),
         Good('ball', '–ù–æ–≤–æ–≥–æ–¥–Ω–∏–π —à–∞—Ä', 'https://downloader.disk.yandex.ru/preview/82d7b2a2bbccc2308a79dc70f5a83f7a5da3ce0af210977991a2041ead10453d/63891b7f/pA5zBOz1fuxOwT6yucvbqdOiNFoh7dGQoW_rj8KjDfezLvaGv6EJjIUzYBPGn6__EegygdvD8bSkwtX8VvvQlw%3D%3D?uid=0&filename=%D0%A8%D0%B0%D1%80.png&disposition=inline&hash=&limit=0&content_type=image%2Fjpeg&owner_uid=0&tknv=v2&size=2048x2048', '–ï–ª–æ—á–Ω—ã–π —à–∞—Ä ‚Äú–° –ª—é–±–æ–≤—å—é, –í–§–¢–ú‚Äù', 550, False),
         Good('shopper', '–®–æ–ø–ø–µ—Ä', 'https://downloader.disk.yandex.ru/preview/530683eceb4218df8bbd688447a88f7df557ab564f2c9e89e87bb3ed8db0dfd7/63891bac/nVLtOjqqkW8XXdDZT7YWvtOiNFoh7dGQoW_rj8KjDfe2EedX-ayFSav7CyHg731OUMU5TtTL5als8KuKezOaRw%3D%3D?uid=0&filename=%D0%A8%D0%BE%D0%BF%D0%B5%D1%802.png&disposition=inline&hash=&limit=0&content_type=image%2Fjpeg&owner_uid=0&tknv=v2&size=2048x2048', '–®–æ–ø–ø–µ—Ä –∏–∑ —á—ë—Ä–Ω–æ–π —Å–∞—Ä–∂–∏ —Å –ø—Ä–∏–Ω—Ç–æ–º ‚Äú–†–µ–∫–≤–∏–∑–∏—Ç‚Äù', 850, False)]


@bot.message_handler(commands=['start'])
def start(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    keyboard.add(types.KeyboardButton("–ë–æ–∂–µ, —Ö—Ä–∞–Ω–∏ –í–§–¢–ú! \u2764\uFE0F\u2764\uFE0F\u2764\uFE0F"))
    mess = '–î–æ—Ä–æ–≥–∏–µ –¥—Ä—É–∑—å—è! –ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –í–∞—Å –Ω–∞ –í–§–¢–ú 2022!'
    bot.send_message(message.from_user.id, mess, reply_markup=keyboard)


def start2(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    keyboard.add(types.KeyboardButton("–ü—Ä–∏–≤–µ—Ç –ë–û–¢!"))
    mess = '–ú—ã —Å—Ç—Ä–µ–º–∏–º—Å—è –∏–¥—Ç–∏ –≤ –Ω–æ–≥—É —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º –∏ —Å–¥–µ–ª–∞–ª–∏ –¥–ª—è –≤–∞—Å –°—É–ø–µ—Ä –±–æ—Ç–∞ –¥–ª—è –º–µ—Ä—á–∞!'
    bot.send_message(message.from_user.id, mess, reply_markup=keyboard)


def start3(message):
    bot.send_message(message.from_user.id, '–õ–µ–≥–∫–∏–π FAQ!\n\n'
                                           '–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?\n\n'
                                           '- –í—ã–±–∏—Ä–∞–π –º–µ—Ä—á –¥–ª—è —Å–µ–±—è –∏ –¥—Ä—É–∑–µ–π\n\n'
                                           '- –û–ø–ª–∞—á–∏–≤–∞–π –ø—Ä—è–º–æ –∑–¥–µ—Å—å\n\n'
                                           '- –í–æ–ª–æ–Ω—Ç–µ—Ä –ø—Ä–∏–Ω–µ—Å–µ—Ç –∏ —Ç–æ—Ä–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ –≤—Ä—É—á–∏—Ç –ø–æ–∫—É–ø–∫—É!\n\n'
                                           '- –¢–æ–ª—å–∫–æ —Å–∞–º–æ–≤—ã–≤–æ–∑ –∏ —Ç–æ–ª—å–∫–æ –≤–æ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –í–§–¢–ú 8-12 –¥–µ–∫–∞–±—Ä—èüòé', reply_markup=types.ReplyKeyboardRemove())
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    keyboard.add(types.KeyboardButton("–î–ê!"), types.KeyboardButton("–ù–ï–¢!"))
    mess = '–ü–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è —Å –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–æ–º –í–§–¢–ú 2022?'
    bot.send_message(message.from_user.id, mess, reply_markup=keyboard)

@bot.message_handler(commands=['shop'])
def menu(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
    keyboard.add(types.KeyboardButton("–û–¥–µ–∂–¥–∞"), types.KeyboardButton("–°—É–≤–µ–Ω–∏—Ä–∫–∞ –í–§–¢–ú"), types.KeyboardButton("–õ–µ–∫—Ü–∏–∏"))
    mess = "–û–¥–µ–∂–¥–∞, —Å—É–≤–µ–Ω–∏—Ä—ã –∏–ª–∏ –ª–µ–∫—Ü–∏–∏?"
    bot.send_message(message.from_user.id, mess, reply_markup=keyboard)


def myFunc(e):
    return e.availability


def clothes(message):
    i = 0
    goods.sort(key=myFunc)
    pad = types.InlineKeyboardMarkup()
    for good in goods:
        if good.is_clothes and good.availability:
            pad = pad.add(types.InlineKeyboardButton(text=good.name, callback_data=good.name))
            if i == range(len(goods)) or goods[i+1].id != good.id:
                bot.send_photo(message.from_user.id, good.photo, reply_markup=pad)
                pad = types.InlineKeyboardMarkup()
        i += 1


def accessories(message):
    for good in goods:
        if not good.is_clothes and good.availability:
            pad = types.InlineKeyboardMarkup().add(types.InlineKeyboardButton(text=good.name, callback_data=good.name))
            bot.send_photo(message.from_user.id, good.photo, reply_markup=pad)


def search_good(name):
    for good in goods:
        if good.name == name:
            return good


def buy(message, good):
    bot.send_invoice(message.from_user.id,
                     title=good.name,
                     description=good.description,
                     photo_url=good.photo,
                     provider_token=PAYMENTS_TOKEN,
                     currency="rub",
                     prices=[types.LabeledPrice(label=good.name, amount=good.price*100)],
                     need_name=True,
                     need_phone_number=True,
                     invoice_payload=good.name)


@bot.pre_checkout_query_handler(lambda query: True)
def checkout(checkout_q):
    mess = "–ò–∑–≤–∏–Ω–∏—Ç–µ, –∫—Ç–æ-—Ç–æ —Ç–æ–ª—å–∫–æ —á—Ç–æ –∫—É–ø–∏–ª –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç–∞–∫–æ–π —Ç–æ–≤–∞—Ä."
    bot.answer_pre_checkout_query(checkout_q.id, ok=search_good(checkout_q.invoice_payload).availability, error_message=mess)


@bot.message_handler(content_types=['successful_payment'])
def successful_payment(message):
    bot.send_sticker(chat_id=message.from_user.id, sticker='CAACAgIAAxkBAAEGFbVje2QQ_w5QhFFMUowHORFG4vI-pQAC1B0AAqdekUu4h9vEFWLtyisE')
    bot.send_message(GROUP_CHAT_ID, f'\t–ò–º—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º:\n<b>{message.from_user.first_name, message.from_user.last_name, message.from_user.username}</b>\n'
                                       f'\t–ò–º—è –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ:<b>\n{message.successful_payment.order_info.name}</b>\n'
                                       f'\t–û–ø–ª–∞—Ç–∏–ª:\n<b>{message.successful_payment.invoice_payload}</b>\n'
                                       f'\t–°—Ç–æ–∏–º–æ—Å—Ç—å—é:\n<b>{message.successful_payment.total_amount/100} RUB</b>\n'
                                       f'\t–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:\n<b>{message.successful_payment.order_info.phone_number}</b>', reply_markup=types.ReplyKeyboardRemove(), parse_mode='html')


@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
    buy(call, search_good(call.data))


@bot.message_handler(content_types=['text', 'voice', 'photo', 'video', 'audio', 'document', 'sticker'])
def get_text_messages(message):
    if message.chat.id == GROUP_CHAT_ID and message.text == '/–Ω–∞–ª–∏—á–∏–µ':
        bot.send_message(GROUP_CHAT_ID, "–ß–µ—Ä–µ–∑ —ç—Ç–æ –º–µ–Ω—é –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –º–µ–Ω—è—Ç—å –Ω–∞–ª–∏—á–∏–µ –ª—é–±–æ–≥–æ —Ç–æ–≤–∞—Ä–∞.", reply_markup=types.ReplyKeyboardRemove())
        for good in goods:
            bot.send_message(GROUP_CHAT_ID, f'{good.name} = {good.availability_text}')
        bot.send_message(GROUP_CHAT_ID, '–î–ª—è —Å–º–µ–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –±–æ—Ç–µ –Ω–∞–ª–∏—á–∏—è —Ç–æ–≥–æ –∏–ª–∏ –∏–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω—É–∂–Ω–æ:\n'
                                           '–ü–µ—Ä–µ—Å–ª–∞—Ç—å –æ–¥–∏–Ω –∏–∑ —Ç–æ–≤–∞—Ä–æ–≤ –≤—ã—à–µ –≤ —ç—Ç–æ—Ç –∂–µ —á–∞—Ç —Å –Ω–∞–¥–ø–∏—Å—å—é "+" –∏–ª–∏ "-".\n'
                                           '\t"+" –µ—Å—Ç—å –≤ –Ω–∞–ª–∏—á–∏–∏\n'
                                           '\t"-" –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏.')
    elif message.chat.id == GROUP_CHAT_ID and message.reply_to_message:
        for good in goods:
            if message.text == '-' and message.reply_to_message.text == f'{good.name} = {good.availability_text}' and good.availability:
                good.availability = False
                good.availability_text = '–Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏'
                bot.send_message(GROUP_CHAT_ID, f'{good.name} = {good.availability_text}', reply_to_message_id=message.id)
            elif message.text == '+' and message.reply_to_message.text == f'{good.name} = {good.availability_text}' and not good.availability:
                good.availability = True
                good.availability_text = '–µ—Å—Ç—å'
                bot.send_message(GROUP_CHAT_ID, f'{good.name} = {good.availability_text}', reply_to_message_id=message.id)
    elif message.voice:
        bot.send_message(message.from_user.id, '–Ø –≤ –º–µ—Ç—Ä–æ, –Ω–∞—É—à–Ω–∏–∫–æ–≤ –Ω–µ—Ç...')
    elif message.photo:
        bot.send_message(message.from_user.id, '–ö–ª–∞—Å—Å–Ω–∞—è —Ñ–æ—Ç–∫–∞!')
    elif message.video:
        bot.send_message(message.from_user.id, '–í–∏–¥–µ–æ –∫–∞–∫ –≤–∏–¥–µ–æ, –º–Ω–µ –±–æ–ª—å—à–µ –¥—Ä—É–≥–æ–≥–æ —Ç–∏–ø–∞ –Ω—Ä–∞–≤—è—Ç—Å—è')
    elif message.audio:
        bot.send_message(message.from_user.id, '–ü–æ—Ç–æ–º –ø–æ—Å–ª—É—à–∞—é')
    elif message.document:
        bot.send_message(message.from_user.id, '–ù—É –∏ —á—Ç–æ –≤ –Ω–µ–º? –°—Ü–µ–Ω–∞—Ä–∏–π –∫ 2023?')
    elif message.sticker:
        bot.send_message(message.from_user.id, '–Ø —Ç–æ–∂–µ –º–æ–≥ –±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–±–µ —Å—Ç–∏–∫–µ—Ä, –ù–û –Ω–µ –±—É–¥—É')
    elif message.text == "–ë–æ–∂–µ, —Ö—Ä–∞–Ω–∏ –í–§–¢–ú! \u2764\uFE0F\u2764\uFE0F\u2764\uFE0F":
        start2(message)
    elif message.text == "–ü—Ä–∏–≤–µ—Ç –ë–û–¢!":
        start3(message)
    elif message.text == "–î–ê!" or message.text == "–ù—É –¥–∞–≤–∞–π—Ç–µ!":
        menu(message)
    elif message.text == "–û–¥–µ–∂–¥–∞":
        clothes(message)
    elif message.text == "–°—É–≤–µ–Ω–∏—Ä–∫–∞ –í–§–¢–ú":
        accessories(message)
    elif message.text == "–õ–µ–∫—Ü–∏–∏":
        bot.send_message(message.from_user.id, 'http://vftmfest.ru/lecture')
    elif message.text == "–ù–ï–¢!":
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        keyboard.add(types.KeyboardButton("–ù—É –¥–∞–≤–∞–π—Ç–µ!"), types.KeyboardButton("–ù–ï–¢!"))
        mess = '–ö–æ–ª–ª–µ–≥–∞, —ç—Ç–æ—Ç –±–æ—Ç —É–º–µ–µ—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–æ–¥–∞–≤–∞—Ç—å... –ü–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è —Å –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–æ–º –í–§–¢–ú 2022?'
        bot.send_message(message.from_user.id, mess, reply_markup=keyboard)
    else:
        if not message.chat.id == GROUP_CHAT_ID:
            bot.send_message(message.from_user.id, "–Ø —É–º–µ—é –æ–±—â–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ —Å –ø–æ–º–æ—â—å—é –º–µ–Ω—é –∏ –∫–Ω–æ–ø–æ–∫")


bot.infinity_polling()


def print_hi(name):
    print(f'–ë–û–¢ {name}')


if __name__ == '__main__':
    print_hi('–ü–†–ï–ö–†–ê–¢–ò–õ –†–ê–ë–û–¢–£!')
    bot.send_message(GROUP_CHAT_ID, "–ë–û–¢ –ü–†–ï–ö–†–ê–¢–ò–õ –†–ê–ë–û–¢–£!!!")
